workbench parts consistent save lifecycle multiple parts share model interface implemented response numerous requests editor based save participants meant views cases meant view based participants interface forces participants views editors provide participants worse problem synchronization mechanism participants platform blindly invokes method context parts resource displayed multiple parts editor kind navigator view function properly parts synchronize behavior actions synchronization save close provide resource complex content user opens editor content user opens editor content user explores content navigator view user modification resource navigator view point view ‘dirty’ editors current definition saveable interface usage platform sufficient handle case mention user close editors view prompted hour closing application ‘dirty’ resource reply comment interface implemented response numerous requests editor based save participants meant views cases meant view based participants bug numbers documents describing feature saveablepart interface forces participants views editors provide participants true bound workbench editor view surprised worked views editors don bug numbers documents feature participate discussions bugs searching ways save view resource search bugzilla keywords save view saveable interface simply theoretically enable views participate save cycle provide terms synchronization mechanisms leading problematic quote javadoc note implements interface excluded common prompt save dialog opens dialog multiple prompts user single user operation implementors aware lead optimal user experience understatement ideal save participant view editor single resource displayed multiple parts case navigator view main editor number auxiliary editors controlled single place parts communicate save operation bug additionally hampers usability interface interface forces participants views editors provide participants workbench controls lifecycle lifecycle changing enhancment saveable restricted workbench parts disagree changed enhancement major issue supposedly solved providing saveable interface interface simply accept view editor save participants enhancement stated bugzilla problem i’ll quote interface’s javadoc note implements interface excluded common prompt save dialog opens dialog multiple prompts user single user operation implementors aware lead optimal user experience severe synchronization problems initial submittal resource complex content user opens editor content user opens editor content user explores content navigator view user modification resource navigator view point view ‘dirty’ editors current infrastructure client code handle user closes editor editor code app closed close editor actions invoked close close close determine prompt user save close user prompted bad mention case user prompted view open save resource works internal eclipse code handling close operations expose client code perform save operations parts refactoring save open parts account properly query dirty parts invoke save method prompt close applicable parts closed work logical physical resources solving problem area bug classified bug enhancement bugzilla opened enhancement portion bug previous history saveable discussion bug lot sense editor view resource level support close sufficient impression people interested configuration problem multiple editors views displaying content resource situation simply provide case missing synchronization capabilities views editors sync behavior leads problems examples previous comments problem unify prompt save behavior operations close operations comment closest solve problem saveable helper class internal org eclipse client code bug continuation problem anthony interested side anthony list time app eclipse test artificial environments ‘green thread’ scenarios integrating implemented stuff including major issues prevent lack communication sync mechanism parts participating save inability front save invoked prompt close close view editor close close close app dirty call invoked context action save save enablement context prompting close public utility unify view editor hunting saving saveable helper internal reply comment work logical physical resources solving problem area bug classified bug enhancement bugzilla opened enhancement portion enhancement request falls current editor view lifecycle saveable match requirements bug designed solve room improvement saveable ability batch custom save dialogs user won multiple dialogs surfacing close parts communicate model text editor editor opened generates document input document provider document provider document document provider document editor input editors opened editor input share synchronized model editor update editor model responsibility synchronize parts close text editor asks save model updated editor closes doesn save talking nick mentioned spades mentioned anthony document saving cases saving views eclipse team looked anthony post document proprietary email parties problem model sync multiple parts issue problem controlling life cycle parts model stays sync fine semantically user experience optimal tweak life cycle work case multiple parts views editors display perspectives model parts model text editor simplistic cover cases applies topic analogy parts view editors model dirty save capability additionally couple regular dirty editors unrelated model parts let’s cases user closes parts prompt model represented parts stay open user closes editors prompt model represented view stay open user closes application prompt eclipse dialog notifying user saved resources resources behavior matter closed eclipse invokes dirty save close needed finally prompt save close determine calls parts participate procedure aware parts representing model closed time late change behavior mentioned calls prompt parts closed limit prompt parts closed invoke prompt participate common dialog preferred mention code limiting prompt hack supported eclipse hack requires knowledge exact algorithm eclipse applies closing parts algorithm documented javadoc shouldn’t easily changed eclipse break code met dusko today understanding problem comment good summary helped issues action real product basically prompts save close shutdown prompt view editor model closed prompt terms model underlying primary file editor behavior actions trigger saves refactoring ctrl save model triggered view editor showing model including supporting views properties view navigation viwes common navigator common navigator structure open model support ctrl view implement saveable don view saveable content extensions unsaved expected behaviour ctrl dirty flags common navigator view tab content extension unsaved top level element showing model suffix open unsaved file save ctrl saves model selected element suffix model cleared view tab remain remaining models unsaved properties view ctrl work source properties showing properties model element selected common navigator save model desired behaviour common cases product high level summary problem cut guidelines support summary issues workbench prevent implementing guidelines comments applications aspects model edited workbench parts editors views users expect intuitive consistent handling save command file save ctrl parts model includes handling supporting views properties view generic navigation views common navigator guidelines implemented order respect user expectations unsaved model dirty flag tab representing model unsaved multiple models items representing models unsaved dirty flag addition tab dirty flag tab dirty flag contained models dirty save command selected model models save command enabled model represented active selection unsaved save command saves model focus control models clears dirty flag model supports nested models innermost model represented selection focus control saved save command saves models unsaved focus limited models current window multiple parts showing model closing require save user prompted application choose prompt case multiple parts saved exit close refactoring prompt save dialog single item model separate items showing models special handling required views showing model general purpose views common navigator supporting views properties view case common navigator content extension model structure model edited single element representing model common navigator handle save command guidelines content unsaved unsaved save remain enabled running active editor unsaved subsequent save save editor contents common navigator content unsaved save work handled active editor properties view case handle save command showing properties model unsaved unsaved outline view case properties view case problematic outline view save command track active editor default issues workbench prevent applications implementing guidelines views participate save lifecycle implementing saveable implementation choice insufficient common navigator properties view cases view tabs dirty flag prompt save close shutdown model aware multiple editors open model unsaved prompt save dialog lists editor separately list model prompt support case closing parts require save model model visible open editor view workbench support prompting save exposed inconsistent treatment downstream plug ins ensure models pending operation saved refactoring support trivial logic downstream plug ins expected copy current workbench support unexpected unwanted behaviour result parts properly participate save lifeycle active view unsaved model implement saveable save targeted active editor view view showing unsaved user expects save save model edited actual result active editor saved editor completely unrelated model user save worst case result data loss save overwriting stored contents earlier desired open issues save lifecycle save work parts unsaved visible perspective save save models unsaved current window showing model visible current perspective close work parts showing model closed visible text editors prompt save close editor open window contrary user expectations multiple editors open model window window editor text editors prompt case desired scope checking save close needed limited current window consistent behavior save confusing view window model visible case arises views editors shared perspectives window comment comment represent sound design solve problems find paragraphs common navigator properties view separate bug common navigator support saveable interface common navigator good effort driven single place entry dealing lifecycle issues general dani points suggestions dirty indications bit strong current scenarios excerpts chat daniel megert parts showing dirty model outline view package explorer nick edgar starting position outline doesn add nick edgar unsaved daniel megert daniel megert sits working copy model daniel megert time tab daniel megert file dirty package explorer written experimental decorator marks open bold nick edgar helpful daniel megert foucs dirty files editor list daniel megert save daniel megert views issue type hierarchy types view daniel megert question guideline view parts nick edgar proto guidelines derived unnamed product navigator projects folders files elaborates contents model files open label omission view case daniel megert wanted mention views don follow guideline nick edgar editors closed saving model indication unsaved view daniel megert agree nick edgar heuristic lost view closed daniel megert sounds fits outline view closed losing data nick edgar exact mapping editors multiple editors open file closing lost nick edgar distinction view primary editing view supporting view daniel megert mmh true daniel megert note introducing views wanted don post guidelines isn putting pressure adopt nick edgar explicitly open model editors opened case don unreasonable showing editing model views workbench enforce convention editors editing open edit save close lifecycle views navigation navigator structure outline properties apps bit artificial user edit model editor view provide consistent user experience agree cut bit strong views dusko elaborate point provide participants proposal expect prompt save close close showing model proposal handle scenario user close editors view prompted hour closing application ‘dirty’ resource bug requests ability plug ins veto shutdown cases reported addressed current support views implementing saveable modulo limitations expressed comments bug resolving bug ideal cases behavior desired cross referenced resources parts resource closed big priority deal scenario bit graceful user closes parts resource resource requires inform user close parts dusko clarify desired behaviour view showing multiple models closed models open editors open shut close model explorer view expect prompt dusko clarify expected behaviour save save open models model explorer showing comment expect prompt open models comment save open models filed bug properties view handling save views dirty tab bug released support problem generic workbench layer org eclipse workbench interface saveable model represents editable saveable subset domain model presentation properties text image tooltip save dirty lifecycle methods interface saveable model source implements saveable saveable model source provide saveable models managed models provide restricted list active models note save action active models save action checks saveable model source active enables active documents dirty addition behaviour view showing multiple models model explorer view save target active documents models represented selected elements models managed view save action tracks active models models parts managing single model return models active models close close actions check dirty documents models active models multiple parts sharing model closed user prompted model model remain visible parts closed user prompted save prompts save closing window shutting work view tab dirty indicator view implements saveable dirty returns true bug dirty indicator deliberately track dirty models properly reflect dirty account models presents return true dirty models presents dirty lifecycle triggering updates dirty indicator enablement save actions parts fire property change saveable dirty models presents based showing works post bit cleanup note saveable model support tied workspace model resource created attachment model explorer attached zip file projects defining simple model explorer requires projects org eclipse examples modelexplorer model code generated org eclipse examples modelexplorer edit edit code generated model org eclipse examples modelexplorer editor editor code generated model org eclipse examples modelexplorer model explorer view install install host eclipse don http eclipse org emf save attachment zip file extract import projects workspace file import general existing projects workspace select archive file launch target eclipse illustrate saveable model support create simple project file project general project create model explorer file project file model creation wizards modeler model opens editor model double click file navigator package explorer view open editor click editor choose properties view required editors model select model element choose child diagram context menu closing editor prompt save close cancel open instance editor choosing editor editor tab closing editor closes prompt model open editor model explorer view window view model explorer drag view tab left pane vertical space model explorer view expand project model file structure open model dirty model elements selected file save action enabled saving closing remaining model editor prompt save model remains visible model explorer view close model explorer view prompts save dirty model update bugs current support moving implementation good usability issue left resource model opened editors navigational view editors bound resource view represents multiple resources common navigator view close editor prompted editor opened resource close editors trickier view open resource model common navigator capable saving hand view integral perspective resources won closed anytime time prompt user application closed bit late ideally save framework determine view capable saving resource left concluding prompt consult view preference user dictate prompted editor resource closed project explorer created attachment patch org eclipse workbench patch adds maintaining list open models workbench contract signatures saveable model source implementers notify saveable model manager result models lifetime saveable model source talked michael valenta update implementations saveable model source ing approval change support trust aware extremely late cycle making kinds proceed reference interfaces model lifecycle listener saveable model manager class model lifecyle event released concerns proposed general model sharing mechanism clients intended address concerns decided rename classes interfaces model names clear javadoc mechanism sharing models workbench parts operate underlying model saveable model saveable saveable model source saveables source model lifecycle listener saveable lifecycle listener model lifecycle event saveable lifecycle event clients hold instances saveable parts consists parts remove saveable model manager public clients global list saveable objects write spec saveables source saveables method intended called clients current proposed remain public common navigator implement saveables source note solve model layer problem sharing models plug ins components clients notion shared models layer aware sharing multiple workbench parts clients shared models result text editors today bug users prompted saving click released changed released removal saveable model saveable model source boris saveables source typo extra workbench lead change team summary changed saveale compare model interface removed saveable changed class saveable compare model class renamed saveable comparison extends saveable method parameter types changed methods renamed classes reflect removal term model workbench changed classes synchronization compare input merge action handler synchronization operation model participant action model synchronize participant ignore comment saveables source typo released verified
 