progress deadlock move files folders operation refactoring participant provide resource move refactoring participant resources managed plug code participant deadlock move files folders operation active shell copy resources resources destination container move files folders operation class org eclipse actions package provide dump hard move files folders operation refactoring participant trouble operation written takes shell interacts users refactoring participants headless created refactoring participant executed thread guarantee executed thread refactoring core infrastructure doesn thread public forum provide stack trace proprietary product authorization parts stack trace top main thread involves eclipse code modal context threads threads deadlock thread main suspended owns org eclipse swt widgets runnable lock org eclipse swt internal win wait message native method org eclipse swt widgets display sleep org eclipse jface operation modal context modal context thread block org eclipse jface operation modal context org eclipse jface operation runnable progress boolean org eclipse core runtime progress monitor org eclipse swt widgets display org eclipse internal progress progress monitor jobs dialog org eclipse jface dialogs progress monitor dialog boolean boolean org eclipse jface operation runnable progress org eclipse internal progress progress monitor jobs dialog boolean boolean org eclipse jface operation runnable progress org eclipse actions move files folders operation org eclipse actions copy files folders operation copy resources org eclipse core resources resource org eclipse core resources container thread modal context suspended owns org eclipse swt widgets runnable lock waiting org eclipse swt widgets runnable lock org eclipse swt widgets runnable lock java lang object wait long int native method org eclipse swt widgets runnable lock java lang object wait org eclipse internal synchronizer org eclipse swt widgets synchronizer sync exec java lang runnable org eclipse internal synchronizer sync exec java lang runnable org eclipse swt widgets display sync exec java lang runnable org eclipse ltk internal refactoring perform change operation execut change org eclipse core runtime progress monitor org eclipse ltk internal refactoring perform change operation org eclipse ltk core refactoring perform change operation org eclipse core runtime progress monitor org eclipse core internal resources workspace org eclipse core resources workspace runnable org eclipse core runtime jobs scheduling rule int org eclipse core runtime progress monitor org eclipse ltk internal refactoring workbench runnable adapter org eclipse core runtime progress monitor org eclipse jface operation modal context modal context thread thread modal context suspended owns org eclipse core internal jobs thread job owns org eclipse actions copy files folders operation org eclipse core internal jobs thread job java lang object wait long int native method org eclipse core internal jobs thread job java lang object wait long org eclipse core internal jobs thread job join org eclipse core runtime progress monitor org eclipse core internal jobs implicit jobs org eclipse core runtime jobs scheduling rule org eclipse core runtime progress monitor boolean org eclipse core internal jobs job manager rule org eclipse core runtime jobs scheduling rule org eclipse core runtime progress monitor org eclipse core internal resources work manager check org eclipse core runtime jobs scheduling rule org eclipse core runtime progress monitor org eclipse core internal resources workspace prepare operation org eclipse core runtime jobs scheduling rule org eclipse core runtime progress monitor org eclipse core internal resources workspace org eclipse core resources workspace runnable org eclipse core runtime jobs scheduling rule int org eclipse core runtime progress monitor org eclipse actions copy files folders operation org eclipse actions workspace modify operation org eclipse core runtime progress monitor org eclipse jface operation modal context modal context thread hope helps looked stack trace happening refactoring change execution starts workspace parts change execution takes place thread refactoring transfers workspace lock purpose thread participant starts modal context thread thread calling move files folders operation deadlock occurs fact workspace lock held thread move files folders operation modal context thread aquire workspace lock solution move files folders operation operation transfers locks owned thread modal context thread thread listener note deadlock scenario isn refactoring specific pointed bug easily produced locking workspace thread executing move files folders operation refactoring moving platform transfering rules operations starting modal context thread agree path follow discuss topic bug news bugzilla activity bug wondering plans john checked dup bug continue discussion bug marked duplicate reopen case subtely created attachment test case test case reproduces deadlock created attachment patch workspace modify operation patch addresses problem throwing exception cases deadlock created attachment patch workspace modify operation patch garbled applied core team formatter settings file patch alter formatting throwing exception good step bug solve problem public eclipse refactoring framework move files folders operation class deadlock fail thrown exception admittedly real work document javadoc declared exceptions limitations current javadoc move files folders operation moves files folders class instantiated intended subclassed agreed specific places problems update javadoc update move files folders operation aware components owned people seperatoe bug reports son missed kind hoping opt fixing work documenting problem hunt places report hit existing code judging discussions bug reports numerous eclipse talking john remove spin event loop copy files folders operation code written jobs framework move bug apply patch order prevent deadlock isn suffecient implement bug apply patch hear dirk follow tod comment strange copy move files folders operation operation called thread running operation call async call haven code involved case equivalent move files folders operation copy resources called thread prevent case modal context operations happening agree comments problem client code side refactoring participant influence thread refactoring runs thread changed participant idea removing dependency sounds tod comment general observations questions doesn workspace modify operation transfer rule modal context thread reason spin event loop cancelation operation async execs executed rely fact thread owns lock executed thread refactorings executed isn depends implementor refactoring ltk core doesn spec thread participants rely fact executed thread executed thread refactoring decides agree removing dependency operations sounds good topic adding knowledge scheduling rules display sync async exec queue async exec require lock held thread additionally throw exception sync exec executed dead lock comment workspace modify operation transferring rule concerned cases thread owns scheduling rule modal context operation transferred rule conflicts rule modal context operation exception occur modal context transferring rule suceed case modal context thread acquire rule owned thread nested rule scheduling rule comment rules async exec purpose job job display async exec scheduling rule guess synchronous equivalent progress service runnable context runnable progress scheduling rule job hint wasn aware released patch workspace modify operation good step deadlock case detected exception thrown seperately move files folders operation replaced operation thread bug test org eclipse tests concurrency test bug automated test suites verified code released automated test suite running builds
 