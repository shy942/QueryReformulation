investigate scalability filtered tree filtered trees large number items order couple items long refesh keystroke investigate problem add filtered tree change refresh job delay time add client change refresh job delay time bug details problem released code problem tested tree items released build karice move tree viewer control set redraw true finally block ensure widget completely broken content provider throws exception good suggestion markus released build refresh improved verified commments bug performance current filtered tree refresh mylar type letters task list standard refresh mechanism workbench freeze details thousands elements filtered tree gig dual core gig addressed hacking adaptive refresh job works great remove filter functionality approach supported reopening bug discuss solution options aallow refresh job extended subclasses replaced easiest fill contents lazily ctrl shift support adaptive refresh implemented abstract mylar filtered tree text changed extensions plug editor benefit filtered tree performance unacceptable big plugin xml jdt filtered navigator view delay filtering based keystrokes enter multiple strokes filter kicks kicks stroke fyi gunnar tested mylar filtered tree approach navigator view full workspace performance current settings abstract mylar filtered tree work thousands nodes tens thousands adaptation delay curve changed accomodate trees large filter changed invoke enter pressed combination mik approaches rule cover base enhancements mik suggested people gunnar tree gazillion items add refresh strategy created bug deal type viewers filteredtree https bugs eclipse org bugs bug cgi love filteredtree reply comment extensions plug editor benefit filtered tree performance unacceptable big plugin xml jdt start typing org ecl pretty markus contribute patch improve implementation refresh filtered tree reason didn expose implementation refresh job consistency frustrate users filtered trees contributed components products work view contributed component product view contributed component product patch approach list comment approach consistency project explorer style prototype view prototype describe comment large projects workspace meant adaptive refresh usable delaying refresh hit enter consistency account size trees support consistency instant response view waiting refresh happen size trees scale mylar current trees columns thousands elements adaptive refresh working adaptive refresh scale project explorer size views account number items conservative fill content lazily presence filter ctrl shift scale gracefully matter big tree hard solution case scalable box clients fuss reason don allowing refresh job extended overridden good solution requires familiar filtered tree jobs clients don care adaptive refresh work nicely cases tree fear large percentage filtered tree scenarios anticipate clients filtered tree regard scalability large scale thinking packages packages view repositories view eclipse repo lots stuff tree plugins target large downstream products plug ins size entire tree account boost performance entire tree traversed number small scale view preferences wizards import export continue function nicely contribute adaptive refresh policy implemented couple large scale test cases performs possibility lazily filling contents open resource dialog investigated reply comment possibility lazily filling contents open resource dialog investigated solution scales viewer scrolls select match visible range fills stability lazily filling contents solution scales learned adaptive filter approach project explorer view current matches approach works instantly contents tree tens thousands nodes trees isn fast core duo hangs refresh spite learned prefer filter interaction ctrl shift takes clicks find common file plugin xml lazily filling work great sizes ranging prefs wizards common navigators btw common navigator content providers impose additional overhead retrieving children computation network filling lazily fine button clear button cases job doesn return instantly created attachment patch released patch improves scalability filtered tree bit cost fully expanding items tree takes time expand tree item causing scrolling bug continue expanding items background great improved filtered tree comment bug reply comment lazily filling contents solution scales solves issue bug fill contents background job causing major flicker windows team loves boris record earns love great search based navigation plan item oops accidentally picked wrong milestone comment finding janek homegrown filtered tree expand nodes works great scales filtered tree whirl migrate week reply comment janek homegrown filtered tree find code remember correctly org eclipse pde internal commands command list action create cheatsheet file user assistance cheatsheet content editor select item hand side command press browse dialog homegrown filtered tree optimization didn work mac released newer version upcoming nightly builds tomorrow integration build interested feedback bad filtered tree expands visible range bug discussion problems tree viewer filtering filtered tree fyi attempted rid mylar task list adaptive refresh policy comment refresh performance lot lazier expanding nodes huge number matches helps work fine adaptive refresh task list items users couple times size freezes retaining adaptive refresh noticed clear button reappear long refresh kicked return filtered tree java mylar bug working explicitly invoking update toolbar true overridden text changed method bug report reply comment bug report patch note enabled optimizations bug haven time moving target milestone bug open set filed bugs potential future work bug filtered tree expand remaining items background bug filtered tree filtered tree scale arbitrary numbers nodes marking fixed
 